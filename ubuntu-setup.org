* Common Setup
** OS Appearance
- Settings -> Appearance
 -  Window colors: Dark
 - Dock: Icon size: 24
 - Dock: Show on: All displays
 - Dock: Position on screen: Bottom
- Settings -> Power
 - Blank Screen: Never
** Packages
Install basic coding tools from apt
#+NAME: Apt coding tools
#+BEGIN_SRC sh
sudo apt update
sudo apt install build-essential
sudo apt install python2
sudo apt install docker.io
sudo apt install fonts-firacode
sudo apt install fonts-cantarell
#+END_SRC
Install wireshark
#+NAME: Wireshark
#+BEGIN_SRC sh
sudo apt-get install wireshark
sudo usermod -aG wireshark $(whoami)
#+END_SRC
After running this, reboot before wireshark can be run

Install Dash To Panel
#+NAME: Dash to panel
#+BEGIN_SRC sh
sudo apt install gnome-tweaks
sudo apt install gnome-shell-extension-dash-to-panel
#+END_SRC
Restart your computer, and enable in the Gnome Tweaks tab

Setup Git
#+NAME: Git
#+BEGIN_SRC shell
sudo apt-get install git
git config --global user.name "<your name>"
git config --global user.email "<your email>"
git config --global core.editor vi
#+END_SRC

** Firefox
Turn on open to open the previous pages

** Sublime
Install the GPG key:
#+NAME: Sublime GPG key
#+BEGIN_SRC sh
wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add -
#+END_SRC

Ensure apt is set up to work with https sources:
#+NAME: Sublime apt https
#+BEGIN_SRC sh
sudo apt-get install apt-transport-https
#+END_SRC

Select the channel to use:
#+NAME Sublime channel
#+BEGIN_SRC sh
echo "deb https://download.sublimetext.com/ apt/stable/" | sudo tee /etc/apt/sources.list.d/sublime-text.list
#+END_SRC

#+RESULTS:

Update apt sources and install Sublime Text
#+NAME Sublime install
#+BEGIN_SRC sh
sudo apt-get update
sudo apt-get install sublime-text
#+END_SRC

Install package control

In sublime, Ctrl+P then Install Package Control

Packages:
- Sidebar Enchancements
- Bracket Highlighter
- Sublime Linter
- Git gutter
- QML

Settings
- "trim_trailing_white_space_on_save": "all",

TODO: Specific linters

** TODO Firefox setup

** TODO Zsh
** Setup ssh keys
Generate keys
#+NAME: Generating ssh keys
#+BEGIN_SRC sh
ssh-keygen -t ed25519 -C "fullpointerxception@gmail.com"
ssh-keygen -t rsa -b 4096 -C "email@email.com"
#+END_SRC

Add key to bitbucket

Add key to github
** JS Things
*** Node.js
TODO make sure curl is installed

Pull and install node.js Check [[https://github.com/nodesource/distributions/blob/master/README.md#debinstall][nodesource github]] for the correct setup version.
#+begin_src sh
curl -fsSL https://deb.nodesource.com/setup_18.x | sudeo -E bash -
sudo apt-get install -y nodejs
#+end_src

Check the nodejs and npm versions
#+begin_src sh
node --version
npm --version
#+end_src
*** Linter
Install eslint
#+begin_src sh
sudo apt-get install eslint
#+end_src

*** Vue
Install vue
#+begin_src sh
npm install -g @vue/cli
#+end_src

Check version
#+begin_src sh
vue --version
#+end_src

Install language server
#+begin_src sh
npm install -g vue-language-server
#+end_src


* Automated Setup
#+NAME: Ubuntu scripted setup
#+BEGIN_SRC sh
cd ~
git clone git@github.com:FullPointerException/dotfiles.git
cd dotfiles
sudo ./install.sh
#+END_SRC

* QGC Development Setup
[[https://dev.qgroundcontrol.com/master/en/getting_started/][QGC dev website]]
*** Serial device requirements
These require a logout after setting, which is annoying so might as well do them first.

#+NAME: QGC dialout
#+BEGIN_SRC sh
sudo usermod -a -G dialout $USER
sudo apt-get remove modemmanager
#+END_SRC

*** Qt
Get a Qt License
Download the [[http://www.qt.io/download-open-source][Qt Online Installer]]. Make executable and run. When selecting versions, ensure you have the following (Use the Archive checkbox to make 5.12.6 appear):
- Qt 5.12.6
 - Desktop gcc 64-bit
 - Qt Charts
 - Qt Virtual Keyboard
 - Android ARMv7
- Developer and Designer Tools
 - CMake
 - Ninja
 - OpenSSL

*** Build Qt OpenSSL
#+NAME: QGC OpenSSL
#+BEGIN_SRC sh
cd ~/Qt/Tools/OpenSSL/src
./config
make
make test
sudo make install
mkdir ../binary
mkdir ../binary/lib
cp libcrypto.so.1.1 ../binary/lib
cp libssl.so.1.1 ../binary/lib
#+END_SRC

*** Additional packages
#+NAME: QGC Additional Ubuntu Packages
#+BEGIN_SRC sh
  sudo apt-get install speech-dispatcher libudev-dev libsdl2-dev patchelf
#+END_SRC

Note: following the instructions on the vidoe page result in trying to install gstreamer1.0-python3-dbg-plugin-loader and gstreamer1.0-python3-plugin-loader which conflict with one another. Instead do the following:
#+NAME: QGC Video Packages
#+BEGIN_SRC sh
sudo apt-get install gstreamer1.0-alsa gstreamer1.0-clutter-3.0 gstreamer1.0-gl gstreamer1.0-gtk3 gstreamer1.0-packagekit gstreamer1.0-plugins-base gstreamer1.0-plugins-base-apps gstreamer1.0-plugins-base-dbg gstreamer1.0-plugins-good gstreamer1.0-pulseaudio gstreamer1.0-tools gstreamer1.0-x gstreamer1.0-adapter-pulseeffects gstreamer1.0-autogain-pulseeffects gstreamer1.0-convolver-pulseeffects gstreamer1.0-crystalhd gstreamer1.0-crystalizer-pulseeffects gstreamer1.0-espeak gstreamer1.0-libav gstreamer1.0-libav-dbg gstreamer1.0-nice gstreamer1.0-omx-bellagio-config gstreamer1.0-omx-generic gstreamer1.0-omx-generic-config gstreamer1.0-opencv gstreamer1.0-pipewire gstreamer1.0-plugins-bad gstreamer1.0-plugins-bad-dbg gstreamer1.0-plugins-good-dbg gstreamer1.0-plugins-rtp gstreamer1.0-plugins-ugly gstreamer1.0-plugins-ugly-dbg gstreamer1.0-pocketsphinx gstreamer1.0-python3-dbg-plugin-loader gstreamer1.0-qt5 gstreamer1.0-rtsp gstreamer1.0-rtsp-dbg gstreamer1.0-vaapi
sudo apt-get install libgstreamer-plugins-base1.0-dev
sudo apt-get install libgstreamer-plugins-bad1.0-dev
#+END_SRC

*** TODO Qt Android Setup
**** OpenJDK
Use version 8 (the Qt docs are a little unclear, in one place they say 11 or earlier, but in another they say newer than 8 may cause problems)
#+NAME: Open JDK install
#+BEGIN_SRC sh
sudo apt install openjdk-8-jdk
#+END_SRC

Inside Qt Creator

Tools > Options > Devices > Android

Select the open jdk /usr/lib/jvm/java-8-openjdk-amd64

Click Set Up SDK

Install necessary packages

Accept Licenses

Once this is complete, check the version. It likely grabbed the wrong one, we need 19.2

Download the gstreamer from here: [[https://gstreamer.freedesktop.org/data/pkg/android/1.14.4/gstreamer-1.0-android-universal-1.14.4.tar.bz2][gstreamer-1.0-android-universal-1.14.4.tar.xz]]

Create a directory named "gstreamer-1.0-android-universal-1.14.4" under the root qgroundcontrol directory (the same directory qgroundcontrol.pro is located). Extract the downloaded archive under this directory.

*** Clone repository
Note: we clone into a sub directory, because the project defaults build folders as a sibling to the git project
#+NAME: Clone QGC repo
#+BEGIN_SRC sh
cd ~/work
mkdir <repo_name>
cd <repo_name>
git clone --recursive git@<repo_source>.git qgc
#+END_SRC
*** Open in Qt creator
Open the project at ~/work/<repo_name>/qgc/qgroundcontrol.pro

Configure the kits

Click build

* TO SORT
- Get edanator (https://sourceforge.net/projects/edanator/)
- Fusion 360
- Prusa slicer
- Setup plotjuggler from source
- Add graphvix to instructions
- Add dash-to-panel to insturctions
